/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'App'
jacocoTestReport {
  reports {
    xml.enabled false
    csv.enabled false
    html.destination "${buildDir}/jacocoHtml"
  }
}

check.dependsOn jacocoTestReport
// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenLocal()
    jcenter()
    maven { url 'http://repo.spring.io/plugins-release' }
    maven { url 'http://repo.spring.io/milestone' }
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    
    testCompile('org.junit.jupiter:junit-jupiter-api:5.0.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.0.0')
  // Use JUnit test framework
     testCompile 'org.hamcrest:hamcrest-core:1.3'
     testCompile "org.mockito:mockito-core:2.19.0"
}
